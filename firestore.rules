rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile if authenticated, but only update their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
      allow delete: if false; // Prevent accidental deletion
    }

    // Doctors manage their own patients. Patients can read records linked to them.
    match /patients/{patientId} {
      allow read: if request.auth.uid == resource.data.doctorId || request.auth.uid == resource.data.authUid;
      allow create: if request.auth != null && request.resource.data.doctorId == request.auth.uid;
      allow update, delete: if request.auth.uid == resource.data.doctorId;
    }

    // Doctors manage their own medicines. Anyone authenticated can read them.
    match /medicines/{medicineId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.doctorId == request.auth.uid;
      allow update, delete: if request.auth.uid == resource.data.doctorId;
    }

    // Doctors manage appointments. Patients can read their own appointments.
    match /appointments/{appointmentId} {
      allow read: if request.auth.uid == resource.data.doctorId || get(/databases/$(database)/documents/patients/$(resource.data.patientId)).data.authUid == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.doctorId == request.auth.uid;
      allow update, delete: if request.auth.uid == resource.data.doctorId;
    }
  }
}
